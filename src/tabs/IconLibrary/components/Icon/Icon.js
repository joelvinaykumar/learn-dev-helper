import React from 'react';
import PropTypes from 'prop-types';
import * as Icons from '../../utils/Icons';

// register you svg icon here
export const iconMap = {
  addMember: Icons.AddMemberSVG,
  addNew: Icons.AddSVG,
  addText: Icons.AddTextSVG,
  assignment: Icons.AssesmentProgressSVG,
  archivedNotification: Icons.ArchivedNotificationSVG,
  assignmentNotification: Icons.AssignmentNotificationSVG,
  archiveList: Icons.CourseArchiveSVG,
  back: Icons.ChevronBackArrowSVG,
  backArrow: Icons.BackArrowSVG,
  bellReminder: Icons.ReminderSVG,
  burger: Icons.HamburgerSVG,
  camera: Icons.CameraSVG,
  zipFile: Icons.ZipFileSVG,
  calendarDark: Icons.CalendarSVG,
  chevronRight: Icons.ChevronRightArrowSVG,
  close: Icons.CancelSVG,
  caretDown: Icons.CaretDownSVG,
  circleO: Icons.SelectionSVG,
  circleOutline: Icons.SelectionOutlineSVG,
  circleSelected: Icons.SelectionActiveSVG,
  calendar: Icons.CourseExpirationSVG,
  cheveronDown: Icons.DownArrowSVG,
  completedNotification: Icons.CompletedNotificationSVG,
  course: Icons.CoursesSVG,
  paths: Icons.PathsSVG,
  events: Icons.EventsSVG,
  completed: Icons.CourseCompletedSVG,
  collapse: Icons.CollapseFullScreenSVG,
  circleClose: Icons.MobileAssesmentFailedSVG,
  courseUnpublishedNotification: Icons.CourseUnpublishedNotificationSVG,
  draftList: Icons.CourseDraftSVG,
  deleteNotification: Icons.DeleteNotificationSVG,
  deleteList: Icons.CourseDeleteSVG,
  drag: Icons.DragSVG,
  ellipses: Icons.MoreActionSVG,
  enrollmentNotification: Icons.EnrollmentNotificationSVG,
  editDate: Icons.EditDateSVG,
  deleteDate: Icons.DeleteDateSVG,
  expiryNotification: Icons.ExpiryNotificationSVG,
  export: Icons.ExportSVG,
  exclamationMark: Icons.HelpSVG,
  enter: Icons.EnterSVG,
  editList: Icons.CourseEditSVG,
  enrollment: Icons.CourseEnrollmentSVG,
  expandToFullScreen: Icons.FullScreenSVG,
  failedNotification: Icons.FailNotificationSVG,
  filterList: Icons.FilterSVG,
  failed: Icons.AssesmentFailedSVG,
  invitationNotification: Icons.InviteNotificationSVG,
  imageText: Icons.BrandSVG,
  invitedNotEnrolled: Icons.CourseInviteSVG,
  issue: Icons.AssesmentLimitExceededSVG,
  logout: Icons.LogoutSVG,
  lockDark: Icons.CredentialSVG,
  leftChevron: Icons.ChevronLeftArrowSVG,
  loader: Icons.LoaderSVG,
  library: Icons.CourseLibrarySVG,
  module: Icons.ModuleSVG,
  maxRetake: Icons.RetakeSVG,
  myCourses: Icons.MyCoursesSVG,
  notification: Icons.NotificationSVG,
  notepad: Icons.NotepadSVG,
  overdue: Icons.CourseOverDueSVG,
  publishNotification: Icons.PublishNotificationSVG,
  popularSearch: Icons.PopularSearchSVG,
  progress: Icons.CourseProgressSVG,
  printer: Icons.PrintSVG,
  plus: Icons.AddPlusSVG,
  publishList: Icons.CoursePublishSVG,
  party: Icons.AssesmentPassedSVG,
  quiz: Icons.QuizSVG,
  rightArrow: Icons.RightArrowSVG,
  search: Icons.SearchSVG,
  switchView: Icons.SwitchViewSVG,
  settingsGear: Icons.SettingsSVG,
  stats: Icons.StatsSVG,
  tick: Icons.SelectSVG,
  time: Icons.TimeSVG,
  timeFrame: Icons.TimeFrameSVG,
  updateNotification: Icons.UpdateNotificationSVG,
  user: Icons.UserSVG,
  validity: Icons.CourseValiditySVG,
  video: Icons.VideoSVG,
  description: Icons.DescriptionSVG,
  presentation: Icons.PresentationSVG,
  alarmClock: Icons.AlarmClockSVG,
  clock: Icons.ClockSVG,
  location: Icons.LocationSVG,
  imageBrowse: Icons.ImageBrowseSVG,
  attachment: Icons.AttachmentSVG,
  duration: Icons.DurationSVG,
  enroll: Icons.EnrollmentSVG,
  info: Icons.InfoSVG,
  warning: Icons.WarningSVG,
  instructor: Icons.InstructorSVG,
  instructors: Icons.InstructorsSVG,
  phone: Icons.PhoneSVG,
  reminder: Icons.ReminderSVG,
  trash: Icons.TrashLightSVG,
  cam: Icons.CamSVG,
  download: Icons.DownloadSVG,
  integration: Icons.IntegrationSVG,
  SSO: Icons.SSOSVG,
  webhook: Icons.WebhookSVG,
  upload: Icons.UploadSVG,
  markPresent: Icons.MarkPresentSVG,
  markAbsent: Icons.MarkAbsentSVG,
  speaker: Icons.SpeakerSVG,
  greenStats: Icons.GreenStatsSVG,
  visibility: Icons.VisibilitySVG,
  fontCase: Icons.FontCaseSVG,
  bell: Icons.BellSVG,
  email: Icons.EmailSVG,
  copy: Icons.CopySVG,
  fileCertificate: Icons.FileCertificateSVG,
  key: Icons.KeySVG,
  stars: Icons.StarsSVG,
  userCircle: Icons.UserCircleSVG,
  userLock: Icons.UserLockSVG,
  usersCog: Icons.UsersCogSVG,
  userShield: Icons.UserShieldSVG,
  userOutlined: Icons.UserOutlinedSVG,
  teamOutlined: Icons.TeamOutlinedSVG,
  courseOutlined: Icons.CourseOutlinedSVG,
  pathOutlined: Icons.PathOutlinedSVG,
  eventOutlined: Icons.EventOutlinedSVG,
  downloadFilled: Icons.DownloadFilledSVG,
  playFilled: Icons.PlayFilledSVG,
  playOutlined: Icons.PlayOutlinedSVG,
  scheduled: Icons.ScheduledSVG,
  unScheduled: Icons.UnScheduledSVG,
  kebabMenu: Icons.KebabMenuSVG,
  OrganisationOutlined: Icons.OrganisationOutlinedSVG,
  csvFileSVG: Icons.CsvFileSVG,
  EditPencil: Icons.EditPencilSVG,
  uploadOutlined: Icons.UploadOulinedSVG,
  language: Icons.LanguageSVG,
  pending: Icons.PendingSVG,
  reviewWarn: Icons.ReviewWarningSVG,
  whiteCircle: Icons.WhiteCircleSVG,
  editIcon: Icons.EditIconSVG,
  evaluate: Icons.EvaluateSVG,
  document: Icons.DocumentSVG,
  workflow: Icons.WorkflowSVG,
  exam: Icons.ExamSVG,
  remindUser: Icons.RemindUserSVG,
  ecommerce: Icons.EcommerceSVG,
  request: Icons.RequestSVG,
  checkCircle: Icons.CheckCircleSVG,
  price: Icons.PriceSVG,
  certified: Icons.CertifiedSVG,
};

const Icon = ({
  name,
  size,
  style,
  color,
  strokeWidth,
}) => {
  const IconName = iconMap[name];

  if (IconName) {
    return(
      <IconName
        width={size}
        height={size}
        style={style}
        color={color}
        strokeWidth={strokeWidth}
      />
    );
  }

  return null;
  
};

Icon.propTypes = {
  style: PropTypes.object,
  name: PropTypes.oneOf(Object.keys(iconMap)).isRequired,
  size: PropTypes.number,
  pointer: PropTypes.bool,
  hasTooltip: PropTypes.bool,
  tooltipInfo: PropTypes.string,
  hoverable: PropTypes.bool,
  hoverColor: PropTypes.string,
  onClick: PropTypes.func,
  tooltipPosition: PropTypes.number,
  className: PropTypes.string,
  color: PropTypes.string,
  dataTestId: PropTypes.string,
  strokeWidth: PropTypes.number,
};

Icon.defaultProps = {
  style: {},
  size: 22,
  pointer: false,
  hasTooltip: false,
  tooltipInfo: null,
  hoverable: false,
  hoverColor: 'rgba(0, 0, 0, 0.25)',
  onClick: () => {},
  tooltipPosition: 'right center',
  className: '',
  color: undefined,
  dataTestId: 'icon',
  strokeWidth: null,
};

export default Icon;